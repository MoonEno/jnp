<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ticket">

    <select id="selectTicketListCount" resultType="int">
        /* 티켓 목록 조회 */
        SELECT
               COUNT(A.TICKET_ID)
          FROM TICKET_INFO A
          LEFT OUTER JOIN
               (
                SELECT
                       A.TICKET_ID,
                       IF(A.STATE_CD = #{stateCd}, 'B', 'T') AS STATE,
                       GROUP_CONCAT(IF(B.LOCKER_TYPE_CD = #{lockerType1}, LOCKER_NO, NULL)) AS LOCKER_NO1,
                       GROUP_CONCAT(IF(B.LOCKER_TYPE_CD = #{lockerType2}, LOCKER_NO, NULL)) AS LOCKER_NO2
                  FROM TICKET_LOCKER A,
                       LOCKER_INFO B
                 WHERE A.LOCKER_ID = B.LOCKER_ID
                 GROUP BY A.TICKET_ID
               ) B
            ON A.TICKET_ID = B.TICKET_ID
           <where>
           <if test="ticketCd != null and ticketCd != ''">
           AND A.TICKET_CD = #{ticketCd}
           </if>
           <if test="state == 'using'">
           AND B.STATE IS NOT NULL
           </if>
           <if test="state == 'out'">
           AND B.STATE IS NULL
           </if>
           <if test="keyword != null and keyword != ''">
           AND A.CELL_NO LIKE CONCAT('%', #{keyword}, '%')
           </if>
           </where>
    </select>
    
    <select id="selectTicketList" resultType="hashmap">
        /* 티켓 목록 조회 */
        SELECT
               A.TICKET_ID,
               A.TICKET_CD,
               (SELECT CODE_NM FROM CODE_INFO WHERE CODE = A.TICKET_CD) AS TICKET_NM,
               A.CELL_NO,
               DATE_FORMAT(A.FROM_DT, '%Y-%m-%d %H:%i:%s') AS FROM_DT,
               DATE_FORMAT(A.TO_DT, '%Y-%m-%d %H:%i:%s') AS TO_DT,
               B.STATE,
               B.LOCKER_NO1,
               B.LOCKER_NO2
          FROM TICKET_INFO A
          LEFT OUTER JOIN
               (
                SELECT
                       A.TICKET_ID,
                       IF(A.STATE_CD = #{stateCd}, 'B', 'T') AS STATE,
                       GROUP_CONCAT(IF(B.LOCKER_TYPE_CD = #{lockerType1}, LOCKER_NO, NULL)) AS LOCKER_NO1,
                       GROUP_CONCAT(IF(B.LOCKER_TYPE_CD = #{lockerType2}, LOCKER_NO, NULL)) AS LOCKER_NO2
                  FROM TICKET_LOCKER A,
                       LOCKER_INFO B
                 WHERE A.LOCKER_ID = B.LOCKER_ID
                 GROUP BY A.TICKET_ID
               ) B
            ON A.TICKET_ID = B.TICKET_ID
           <where>
           <if test="ticketCd != null and ticketCd != ''">
           AND A.TICKET_CD = #{ticketCd}
           </if>
           <if test="state == 'using'">
           AND B.STATE IS NOT NULL
           </if>
           <if test="state == 'out'">
           AND B.STATE IS NULL
           </if>
           <if test="keyword != null and keyword != ''">
           AND A.CELL_NO LIKE CONCAT('%', #{keyword}, '%')
           </if>
           </where>
         ORDER BY A.TICKET_ID DESC
         LIMIT #{firstLimit}, #{lastLimit}
    </select>
    
    <select id="selectTicketLockerState" resultType="hashmap">
        /* 티켓 락커 상태 조회 */
        SELECT
               LOCKER_ID,
               STATE_CD
          FROM TICKET_LOCKER
         WHERE TICKET_ID = #{ticketId}
    </select>

    <delete id="deleteTicketLocker">
        /* 티켓 락커 삭제 */
        DELETE
          FROM TICKET_LOCKER
         WHERE TICKET_ID = #{ticketId}
    </delete>
    
    <insert id="insertUserHist">
        /* 회원 이력 등록 */
        INSERT INTO USER_HIST (
               TICKET_ID,
               ACT_CD,
               ACT_DT
        ) VALUES (
               #{ticketId},
               #{actCd},
               NOW()
        )
    </insert>
</mapper>